{"version":3,"sources":["components/ProductCardBig/ProductCardBig.module.css","components/share/buttons/CountButton/CountButton.module.css","components/share/buttons/CountButton/CountButton.js","components/ProductCardBig/ProductCardBig.js","components/ProductCardBig/ProductCardBigContainer.js","components/ProductListCart/ProductListCart.module.css","components/ProductListCart/ProductListCart.js","components/ProductListCart/ProductListCartContainer.js","pages/CartPage/CartPage.js"],"names":["module","exports","CountButton","onClick","children","overStyle","className","styles","button","defaultProps","ProductCardBig","product","isInCart","quantity","handleProductIncrement","handleProductDecrement","handleAddProductToCart","handleRemoveProductFromCart","handleEditClick","isOwnProduct","withCountButtons","totalPrice","container","BaseProductInfo","Button","SimpleLabel","text","type","ProductCardBigContainer","productsInCart","useSelector","getProductsIdInCart","cart","getCart","dispatch","useDispatch","isAlreadyInCart","id","getIsOwnProduct","currencyFormatter","reducerForPrice","mapPriceToCart","incrementProductQuantity","decrementProductQuantity","addToCart","removeFromCart","setEditedProduct","showProductForm","ProductListCart","products","list","map","item","key","ProductListCartContainer","getProductsInCart","getTotalPrice","CartPage"],"mappings":"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","file":"static/js/cart-page.fb1990d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProductCardBig_container__3TTZS\",\"link\":\"ProductCardBig_link__1YHPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CountButton_button__3cvVv\"};","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './CountButton.module.css';\r\n\r\nexport default function CountButton({ onClick, children, overStyle }) {\r\n  return (\r\n    <button onClick={onClick} className={overStyle ? overStyle : styles.button}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nCountButton.propTypes = {\r\n  onClick: propTypes.func,\r\n};\r\n\r\nCountButton.defaultProps = {\r\n  onClick: () => null,\r\n};\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './ProductCardBig.module.css';\r\nimport BaseProductInfo from '../BaseProductInfo/BaseProductInfo';\r\nimport CountButton from '../share/buttons/CountButton/CountButton';\r\nimport SimpleLabel from '../share/labels/SimpleLabel/SimpleLabel';\r\nimport Button from '../share/buttons/Button/Button';\r\n\r\nexport default function ProductCardBig({\r\n  product,\r\n  children,\r\n  isInCart,\r\n  quantity,\r\n  handleProductIncrement,\r\n  handleProductDecrement,\r\n  handleAddProductToCart,\r\n  handleRemoveProductFromCart,\r\n  handleEditClick,\r\n  isOwnProduct,\r\n  withCountButtons,\r\n  totalPrice,\r\n}) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div>\r\n        <BaseProductInfo product={product} />\r\n        {children}\r\n\r\n        {!isOwnProduct ? (\r\n          <div>\r\n            {isInCart ? (\r\n              <>\r\n                {withCountButtons ? (\r\n                  <div>\r\n                    Quantity in cart : <CountButton onClick={handleProductDecrement}>-</CountButton> {quantity}{' '}\r\n                    <CountButton onClick={handleProductIncrement}>+</CountButton>\r\n                    <SimpleLabel text={`Price for ${quantity} units : ${totalPrice}`} />\r\n                  </div>\r\n                ) : null}\r\n\r\n                <Button onClick={handleRemoveProductFromCart}>Remove from cart</Button>\r\n              </>\r\n            ) : (\r\n              <Button onClick={handleAddProductToCart} type=\"submit\">\r\n                Add to cart\r\n              </Button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Button onClick={handleEditClick}>Edit Product</Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nProductCardBig.propTypes = {\r\n  product: propTypes.shape({\r\n    id: propTypes.string.isRequired,\r\n  }).isRequired,\r\n  withCountButtons: propTypes.bool,\r\n  children: propTypes.node,\r\n  isInCart: propTypes.bool,\r\n  quantity: propTypes.number.isRequired,\r\n  isOwnProduct: propTypes.bool.isRequired,\r\n  handleProductIncrement: propTypes.func.isRequired,\r\n  handleProductDecrement: propTypes.func.isRequired,\r\n  handleAddProductToCart: propTypes.func.isRequired,\r\n  handleRemoveProductFromCart: propTypes.func.isRequired,\r\n  handleEditClick: propTypes.func.isRequired,\r\n  totalPrice: propTypes.string,\r\n};\r\n\r\nProductCardBig.defaultProps = {\r\n  withCountButtons: false,\r\n  isInCart: false,\r\n};\r\n","import React from 'react';\r\nimport { isAlreadyInCart, reducerForPrice } from '../../helpers/productHelpers';\r\nimport currencyFormatter from '../../helpers/currencyFormatter';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getProductsIdInCart, getCart } from '../../redux/cart/cartSelectors';\r\nimport { getIsOwnProduct } from '../../redux/products/productsSelectors';\r\nimport {\r\n  addToCart,\r\n  removeFromCart,\r\n  decrementProductQuantity,\r\n  incrementProductQuantity,\r\n} from '../../redux/cart/cartActions';\r\nimport { setEditedProduct } from '../../redux/products/productsActions';\r\nimport { showProductForm } from '../../redux/app/appActions';\r\nimport ProductCardBig from './ProductCardBig';\r\n\r\nconst mapPriceToCart = product => {\r\n  return currencyFormatter(reducerForPrice(0, product));\r\n};\r\n\r\nexport default function ProductCardBigContainer({ product, withCountButtons, children }) {\r\n  const productsInCart = useSelector(getProductsIdInCart);\r\n  const cart = useSelector(getCart);\r\n  const dispatch = useDispatch();\r\n\r\n  const isInCart = isAlreadyInCart(product.id, productsInCart);\r\n  const quantity = (cart[product.id] && cart[product.id].quantity) || 0;\r\n\r\n  const handleProductIncrement = () => dispatch(incrementProductQuantity(product.id));\r\n  const handleProductDecrement = () => dispatch(decrementProductQuantity(product.id));\r\n  const handleAddProductToCart = () => dispatch(addToCart(product));\r\n  const handleRemoveProductFromCart = () => dispatch(removeFromCart(product.id));\r\n\r\n  const handleEditClick = () => {\r\n    dispatch(setEditedProduct(product));\r\n    dispatch(showProductForm(true));\r\n  };\r\n\r\n  const isOwnProduct = useSelector(getIsOwnProduct(product));\r\n  const totalPrice = cart[product.id] && mapPriceToCart(cart[product.id]);\r\n\r\n  return (\r\n    <ProductCardBig\r\n      product={product}\r\n      isInCart={isInCart}\r\n      quantity={quantity}\r\n      handleProductIncrement={handleProductIncrement}\r\n      handleProductDecrement={handleProductDecrement}\r\n      handleAddProductToCart={handleAddProductToCart}\r\n      handleRemoveProductFromCart={handleRemoveProductFromCart}\r\n      handleEditClick={handleEditClick}\r\n      isOwnProduct={isOwnProduct}\r\n      totalPrice={totalPrice}\r\n      withCountButtons={withCountButtons}\r\n      children={children}\r\n    />\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ProductListCart_list__2oeNS\",\"item\":\"ProductListCart_item__184Nc\",\"container\":\"ProductListCart_container__3I0GF\"};","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './ProductListCart.module.css';\r\nimport ProductCardBigContainer from '../ProductCardBig/ProductCardBigContainer';\r\nimport Button from '../share/buttons/Button/Button';\r\n\r\nexport default function ProductListCart({ products, totalPrice }) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <ul className={styles.list}>\r\n        {products.map(item => (\r\n          <li className={styles.item} key={item.id}>\r\n            <ProductCardBigContainer product={item} withCountButtons />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {totalPrice > 0 ? (\r\n        <Button type=\"submit\">{`Place your order ${totalPrice}`} </Button>\r\n      ) : (\r\n        <h2>Your cart is empty now...</h2>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nProductListCart.propTypes = {\r\n  products: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      name: propTypes.string.isRequired,\r\n      price: propTypes.number.isRequired,\r\n      origin: propTypes.string.isRequired,\r\n      createdAt: propTypes.string.isRequired,\r\n      updatedAt: propTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  totalPrice: propTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { getProductsInCart, getTotalPrice } from '../../redux/cart/cartSelectors';\r\nimport { useSelector } from 'react-redux';\r\nimport ProductListCart from './ProductListCart';\r\n\r\nexport default function ProductListCartContainer() {\r\n  const products = useSelector(getProductsInCart);\r\n  const totalPrice = useSelector(getTotalPrice);\r\n  return <ProductListCart products={products} totalPrice={totalPrice} />;\r\n}\r\n","import React from 'react';\r\nimport ProductListCartContainer from '../../components/ProductListCart/ProductListCartContainer';\r\nexport default function CartPage() {\r\n  return (\r\n    <section>\r\n      <ProductListCartContainer />\r\n    </section>\r\n  );\r\n}\r\n"],"sourceRoot":""}